name: Setup PythonAnywhere Environment

on:
  push:
    tags:
      - '*'  # Runs only when a tag is created

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PA_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ssh.pythonanywhere.com >> ~/.ssh/known_hosts

      - name: Setup Environment on PythonAnywhere
        run: |
          ssh ${{ secrets.PA_USERNAME }}@ssh.pythonanywhere.com << 'EOF'
            set -e  # Exit on error

            # Set up variables
            PROJECT_DIR=~/flask-project
            BACKUP_DIR="${PROJECT_DIR}-$(date +%Y%m%d%H%M%S)"

            # Archive old project if exists
            if [ -d "$PROJECT_DIR" ]; then
              echo "Archiving existing project..."
              mv $PROJECT_DIR $BACKUP_DIR
              tar -czf ${BACKUP_DIR}.tar.gz $BACKUP_DIR
              rm -rf $BACKUP_DIR
            fi

            # Clone the latest code
            git clone --branch main git@github.com:Karan-skaeo/flask-ci-cd-pythonanywhere.git $PROJECT_DIR

            # Navigate to project
            cd $PROJECT_DIR

            # Create .env file
            echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" > .env
            echo "DEBUG=True" >> .env

            # Set up virtual environment
            python3 -m venv venv
            source venv/bin/activate

            # Install dependencies
            pip install --upgrade pip
            pip install -r requirements.txt
          EOF
