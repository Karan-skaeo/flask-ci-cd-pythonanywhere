name: Setup PythonAnywhere Environment

on:
  push:
    tags:
      - '*'  # Runs only when a tag is created

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Deploy to PythonAnywhere
        env:
          SSHPASS: ${{ secrets.PA_PASSWORD }}
          REMOTE_USER: ${{ vars.PA_USERNAME }}
          REMOTE_HOST: ssh.pythonanywhere.com
        run: |
          # Use sshpass to log in and execute remote commands with a forced terminal
          sshpass -e ssh -tt -o StrictHostKeyChecking=no ${{ env.REMOTE_USER }}@${{ env.REMOTE_HOST }} << 'EOF'
            set -e  # Exit on error
      
            # Set up variables
            PROJECT_DIR=~/flask-project
            BACKUP_DIR="${PROJECT_DIR}-$(date +%Y%m%d%H%M%S)"
      
            # Archive old project if exists
            if [ -d "$PROJECT_DIR" ]; then
              echo "Archiving existing project..."
              mv $PROJECT_DIR $BACKUP_DIR
              tar -czf ${BACKUP_DIR}.tar.gz $BACKUP_DIR
              rm -rf $BACKUP_DIR
            fi
      
            # Clone the latest code
            git clone --branch main https://github.com/Karan-skaeo/flask-ci-cd-pythonanywhere.git $PROJECT_DIR
      
            # Navigate to project
            cd $PROJECT_DIR
      
            # Create .env file
            echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" > .env
            echo "DEBUG=True" >> .env
      
            # Set up virtual environment
            python3 -m venv venv
            source venv/bin/activate
      
            # Install dependencies
            pip install --upgrade pip
            pip install -r requirements.txt
          EOF
        
